{"version":3,"sources":["firebase.js","store/slices/folderSlice.js","store/slices/todoSlice.js","store/index.js","components/header/index.jsx","components/ui/checkbox/index.jsx","components/todoList/todo/index.jsx","components/todoList/index.jsx","components/ui/input/index.jsx","components/board/index.jsx","img/logo.svg","components/header/headerLogo/index.jsx","components/folderList/folder/index.jsx","components/folderList/index.jsx","components/navigation/index.jsx","pages/home/index.jsx","App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","getFolders","createAsyncThunk","a","getDocs","query","collection","querySnapshot","data","forEach","doc","push","id","addNewFolder","title","dispatch","addDoc","docRef","folders","folderSlice","createSlice","name","initialState","status","reducers","state","action","payload","extraReducers","pending","fulfilled","actions","getTodos","folderId","where","addNewTodo","completed","todos","deleteTodo","deleteDoc","remove","changeStateTodo","changeState","updateDoc","todosSlice","filter","todo","stateTodo","find","configureStore","reducer","folderReducer","todoReducer","Header","pathname","useLocation","useSelector","folder","slice","activeFolder","className","Checkbox","onClick","width","height","viewBox","fill","xmlns","d","Todo","removeTodo","TodoList","useDispatch","React","useEffect","map","Input","value","setValue","onSubmit","classNames","onChange","e","target","placeholder","type","Board","useState","preventDefault","trim","length","params","replace","HeaderLogo","src","logo","alt","Folder","link","active","activeTodos","FolderList","useHistory","Navigation","Home","App","exact","path","component","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"kaAGMA,EAAcC,YAAc,CAChCC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,iDACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8CAGIC,EAAKC,YAAaV,GCTlBW,EAAaC,YAAiB,qBAAD,sBAAuB,8BAAAC,EAAA,sEACnCC,YAAQC,YAAMC,YAAWP,EAAI,aADM,cACzDQ,EADyD,OAGzDC,EAAO,GAEbD,EAAcE,SAAQ,SAACC,GACrBF,EAAKG,KAAL,aAAYC,GAAIF,EAAIE,IAAOF,EAAIF,YAN8B,kBASxDA,GATwD,4CAYpDK,EAAeX,YAC1B,uBAD0C,uCAE1C,WAAOY,EAAP,oBAAAX,EAAA,6DAAgBY,EAAhB,EAAgBA,SAAhB,SACuBC,YAAOV,YAAWP,EAAI,WAAY,CACrDe,MAAOA,IAFX,OACQG,EADR,OAKEF,EAASG,EAAQ,CAAEJ,MAAOA,EAAOF,GAAIK,EAAOL,MAL9C,2CAF0C,yDAWtCO,EAAcC,YAAY,CAC9BC,KAAM,UACNC,aAAc,CACZJ,QAAS,GACTK,OAAQ,MAEVC,SAAU,CACRN,QADQ,SACAO,EAAOC,GACbD,EAAMP,QAAQP,KAAKe,EAAOC,WAG9BC,eAAa,mBACV3B,EAAW4B,SAAU,SAACJ,GACrBA,EAAMF,OAAS,aAFN,cAIVtB,EAAW6B,WAAY,SAACL,EAAOC,GAC9BD,EAAMF,OAAS,YACfE,EAAMP,QAAUQ,EAAOC,WANd,KAWPT,EAAYC,EAAYY,QAAxBb,QACOC,IAAf,QCrCaa,EAAW9B,YAAiB,iBAAD,uCAAmB,WAAO+B,GAAP,iBAAA9B,EAAA,sEAC7BC,YAC1BC,YAAMC,YAAWP,EAAI,SAAUmC,YAAM,WAAY,KAAMD,KAFA,cACnD1B,EADmD,OAKnDC,EAAO,GAEbD,EAAcE,SAAQ,SAACC,GACrBF,EAAKG,KAAL,aAAYC,GAAIF,EAAIE,IAAOF,EAAIF,YARwB,kBAWlDA,GAXkD,2CAAnB,uDAc3B2B,EAAajC,YACxB,mBADwC,uCAExC,qCAAAC,EAAA,6DAASW,EAAT,EAASA,MAAOmB,EAAhB,EAAgBA,SAAclB,EAA9B,EAA8BA,SAA9B,SACuBC,YAAOV,YAAWP,EAAI,SAAU,CACnDe,MAAOA,EACPmB,SAAUA,EACVG,WAAW,IAJf,OACQnB,EADR,OAOEF,EAASsB,EAAM,CAAEvB,MAAOA,EAAOF,GAAIK,EAAOL,MAP5C,2CAFwC,yDAa7B0B,EAAapC,YACxB,mBADwC,uCAExC,WAAOU,EAAP,kBAAAT,EAAA,6DAAaY,EAAb,EAAaA,SAAb,SACQwB,YAAU7B,YAAIX,EAAI,QAASa,IADnC,OAGEG,EAASyB,EAAO5B,IAHlB,2CAFwC,yDAQ7B6B,EAAkBvC,YAC7B,wBAD6C,uCAG7C,iCAAAC,EAAA,6DAASS,EAAT,EAASA,GAAIwB,EAAb,EAAaA,WAAerB,EAA5B,EAA4BA,UACjB2B,EAAY9B,IADvB,SAGQ+B,YAAUjC,YAAIX,EAAI,QAASa,GAAK,CACpCwB,WAAYA,IAJhB,2CAH6C,yDAYzCQ,EAAaxB,YAAY,CAC7BC,KAAM,QACNC,aAAc,CACZe,MAAO,GACPd,OAAQ,MAEVC,SAAU,CACRa,MADQ,SACFZ,EAAOC,GACXD,EAAMY,MAAM1B,KAAKe,EAAOC,UAE1Ba,OAJQ,SAIDf,EAAOC,GACZD,EAAMY,MAAQZ,EAAMY,MAAMQ,QAAO,SAACC,GAAD,OAAUA,EAAKlC,KAAOc,EAAOC,YAEhEe,YAPQ,SAOIjB,EAAOC,GACjB,IAAMqB,EAAYtB,EAAMY,MAAMW,MAAK,SAACF,GAAD,OAAUA,EAAKlC,KAAOc,EAAOC,WAEhEoB,EAAUX,WAAaW,EAAUX,YAGrCR,eAAa,mBACVI,EAASH,SAAU,SAACJ,GACnBA,EAAMF,OAAS,aAFN,cAIVS,EAASF,WAAY,SAACL,EAAOC,GAC5BD,EAAMF,OAAS,WACfE,EAAMY,MAAQX,EAAOC,WANZ,KAWf,EAAuCiB,EAAWb,QAA1CM,EAAR,EAAQA,MAAOG,EAAf,EAAeA,OAAQE,EAAvB,EAAuBA,YACRE,IAAf,QCvFeK,cAAe,CAC5BC,QAAS,CACPhC,QAASiC,EACTd,MAAOe,K,uCCcIC,EAhBA,WACb,IAAQC,EAAaC,cAAbD,SACFpC,EAAUsC,aAAY,SAAC/B,GAAD,OAAWA,EAAMP,QAAQA,WAAS8B,MAC5D,SAACS,GAAD,OAAYA,EAAO7C,KAAO0C,EAASI,MAAM,MAGrCC,EACS,iBAAbL,EAA8B,uCAAWpC,GAAWA,EAAQJ,MAE9D,OACE,qBAAK8C,UAAU,SAAf,SACE,oBAAIA,UAAU,gBAAd,SAA+BD,OCUtBE,G,MAxBE,SAAC,GAAoC,IAAlCzB,EAAiC,EAAjCA,UAAWM,EAAsB,EAAtBA,YAAa9B,EAAS,EAATA,GAC1C,OACE,qBACEgD,UAAS,mBAAcxB,EAAY,mBAAqB,IACxD0B,QAAS,WACPpB,EAAY9B,EAAIwB,IAHpB,SAME,qBACE2B,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,6WACFF,KAAK,gBCwBAG,G,MAvCF,SAAC,GAAuD,IAArDvD,EAAoD,EAApDA,MAAOsB,EAA6C,EAA7CA,UAAWxB,EAAkC,EAAlCA,GAAI0D,EAA8B,EAA9BA,WAAY5B,EAAkB,EAAlBA,YAChD,OACE,sBAAKkB,UAAU,OAAf,UACE,cAAC,EAAD,CAAUxB,UAAWA,EAAWM,YAAaA,EAAa9B,GAAIA,IAC9D,oBAAIgD,UAAU,cAAd,SAA6B9C,IAC7B,sBAAK8C,UAAU,gBAAf,UACE,wBAAQA,UAAU,eAAlB,SACE,qBACEG,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,kVACFF,KAAK,gBAIX,wBAAQN,UAAU,eAAeE,QAAS,kBAAMQ,EAAW1D,IAA3D,SACE,qBACEmD,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,y9DACFF,KAAK,wBCeJK,EAnCE,WACf,IAAMxD,EAAWyD,cACTlB,EAAaC,cAAbD,SACFjB,EAAQmB,aAAY,SAAC/B,GAAD,OAAWA,EAAMY,MAAMA,SAEjDoC,IAAMC,WAAU,WACd3D,EAASiB,EAASsB,EAASI,MAAM,OAChC,CAAC3C,EAAUuC,IAEd,IAAMgB,EAAa,SAAC1D,GAClBG,EAASuB,EAAW1B,KAGhB8B,EAAc,SAAC9B,EAAIwB,GAKvBrB,EAAS0B,EAJM,CACb7B,GAAIA,EACJwB,UAAWA,MAKf,OACE,qBAAKwB,UAAU,QAAf,SACGvB,EAAMsC,KAAI,SAAC7B,GAAD,OACT,cAAC,EAAD,2BAEMA,GAFN,IAGEwB,WAAYA,EACZ5B,YAAaA,IAHRI,EAAKlC,U,iBCpBLgE,G,MAfD,SAAC,GAAoD,IAAlDvD,EAAiD,EAAjDA,KAAMuC,EAA2C,EAA3CA,UAAWiB,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACjD,OACE,uBAAMnB,UAAWoB,IAAW,OAAQpB,GAAYmB,SAAUA,EAA1D,UACE,uBACEnB,UAAU,cACViB,MAAOA,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAON,QACnCO,YAAY,IACZC,KAAK,SAEP,uBAAOzB,UAAU,cAAjB,SAAgCvC,SCgCvBiE,G,MAlCD,WACZ,IAAMvE,EAAWyD,cACTlB,EAAaC,cAAbD,SACR,EAA0BmB,IAAMc,SAAS,IAAzC,mBAAOV,EAAP,KAAcC,EAAd,KAiBA,OACE,sBAAKlB,UAAU,QAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEvC,KAAK,6HACLwD,MAAOA,EACPC,SAAUA,EACVC,SAvBU,SAACG,GAGf,GAFAA,EAAEM,iBAEEX,EAAMY,KAAK,IAAIC,OAAS,EAAG,CAC7B,IAAMC,EAAS,CACb7E,MAAO+D,EAAMe,QAAQ,MAAO,KAAKH,OACjCxD,SAAUqB,EAASI,MAAM,IAG3B3C,EAASoB,EAAWwD,IAEpBb,EAAS,aC5BA,MAA0B,iCCa1Be,EATI,WACf,OACI,sBAAKjC,UAAU,OAAf,UACI,qBAAKkC,IAAKC,EAAMC,IAAI,KACpB,+CCQGC,G,MAdA,SAAC,GAAoD,IAAlDnF,EAAiD,EAAjDA,MAAOF,EAA0C,EAA1CA,GAAID,EAAsC,EAAtCA,KAAMuF,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAC/C,OACE,qBACExC,UAAS,iBAAYuC,EAAS,iBAAmB,IACjDrC,QAAS,WACPnD,EAAKuF,GACLE,EAAYxF,IAJhB,SAOE,oBAAIgD,UAAU,gBAAd,SAA+B9C,QCyCtBuF,EAzCI,WACjB,IAAMtF,EAAWyD,cACXtD,EAAUsC,aAAY,SAAC/B,GAAD,OAAWA,EAAMP,QAAQA,WAC7CP,EAAS2F,cAAT3F,KACA2C,EAAaC,cAAbD,SAERmB,IAAMC,WAAU,WACd3D,EAASd,OACR,CAACc,IAEJ,IAAMqF,EAAc,SAACxF,GACnBG,EAASiB,EAASpB,KAGpB,OACE,sBAAKgD,UAAU,UAAf,UACE,cAAC,EAAD,CACE9C,MAAM,uCACNoF,KAAK,eACLvF,KAAMA,EACNwF,OACe,gBAAb7C,GAA2C,iBAAbA,EAIhC8C,YAAaA,IAEdlF,EAAQyD,KAAI,SAAClB,GAAD,OACX,cAAC,EAAD,2BAEMA,GAFN,IAGEyC,KAAI,WAAMzC,EAAO7C,IACjBD,KAAMA,EACNwF,OAAQ7C,IAAQ,WAASG,EAAO7C,IAChCwF,YAAaA,IALR3C,EAAO7C,WCDP2F,G,MA5BI,WACjB,IAAMxF,EAAWyD,cACjB,EAA0BC,IAAMc,SAAS,IAAzC,mBAAOV,EAAP,KAAcC,EAAd,KAWA,OACE,wBAAOlB,UAAU,QAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEA,UAAU,eACVvC,KAAK,6HACLwD,MAAOA,EACPC,SAAUA,EACVC,SAlBY,SAACG,GACjBA,EAAEM,iBAEEX,EAAMY,KAAK,IAAIC,OAAS,IAC1B3E,EAASF,EAAagE,EAAMe,QAAQ,MAAO,KAAKH,SAChDX,EAAS,aCNA0B,G,MATF,WACX,OACE,uBAAM5C,UAAU,OAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SCGS6C,OARf,WACE,OACE,mCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAWJ,O,MCIhDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.9ffbe624.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseApp = initializeApp({\r\n  apiKey: \"AIzaSyC-JwZRcwfI2C0rjrPQT6KzCLQX_CkKTEs\",\r\n  authDomain: \"todo-aa4ef.firebaseapp.com\",\r\n  databaseURL: \"https://todo-aa4ef-default-rtdb.firebaseio.com\",\r\n  projectId: \"todo-aa4ef\",\r\n  storageBucket: \"todo-aa4ef.appspot.com\",\r\n  messagingSenderId: \"867892390001\",\r\n  appId: \"1:867892390001:web:fe2b562d639279bc2793d0\",\r\n});\r\n\r\nexport const db = getFirestore(firebaseApp);","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { db } from \"../../firebase\";\r\nimport { collection, getDocs, query, addDoc } from \"firebase/firestore\";\r\n\r\nexport const getFolders = createAsyncThunk(\"folders/getFolders\", async () => {\r\n  const querySnapshot = await getDocs(query(collection(db, \"folders\")));\r\n\r\n  const data = [];\r\n\r\n  querySnapshot.forEach((doc) => {\r\n    data.push({ id: doc.id, ...doc.data() });\r\n  });\r\n\r\n  return data;\r\n});\r\n\r\nexport const addNewFolder = createAsyncThunk(\r\n  \"folders/addNewFolder\",\r\n  async (title, { dispatch }) => {\r\n    const docRef = await addDoc(collection(db, \"folders\"), {\r\n      title: title,\r\n    });\r\n\r\n    dispatch(folders({ title: title, id: docRef.id }));\r\n  }\r\n);\r\n\r\nconst folderSlice = createSlice({\r\n  name: \"folders\",\r\n  initialState: {\r\n    folders: [],\r\n    status: null,\r\n  },\r\n  reducers: {\r\n    folders(state, action) {\r\n      state.folders.push(action.payload);\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getFolders.pending]: (state) => {\r\n      state.status = \"pending\";\r\n    },\r\n    [getFolders.fulfilled]: (state, action) => {\r\n      state.status = \"fulfilled\";\r\n      state.folders = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { folders } = folderSlice.actions;\r\nexport default folderSlice.reducer;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { db } from \"../../firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  query,\r\n  where,\r\n  addDoc,\r\n  doc,\r\n  deleteDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\n\r\nexport const getTodos = createAsyncThunk(\"todos/getTodos\", async (folderId) => {\r\n  const querySnapshot = await getDocs(\r\n    query(collection(db, \"todos\"), where(\"folderId\", \"==\", folderId))\r\n  );\r\n\r\n  const data = [];\r\n\r\n  querySnapshot.forEach((doc) => {\r\n    data.push({ id: doc.id, ...doc.data() });\r\n  });\r\n\r\n  return data;\r\n});\r\n\r\nexport const addNewTodo = createAsyncThunk(\r\n  \"todos/addNewTodo\",\r\n  async ({ title, folderId }, { dispatch }) => {\r\n    const docRef = await addDoc(collection(db, \"todos\"), {\r\n      title: title,\r\n      folderId: folderId,\r\n      completed: false,\r\n    });\r\n\r\n    dispatch(todos({ title: title, id: docRef.id }));\r\n  }\r\n);\r\n\r\nexport const deleteTodo = createAsyncThunk(\r\n  \"todos/removeTodo\",\r\n  async (id, { dispatch }) => {\r\n    await deleteDoc(doc(db, \"todos\", id));\r\n\r\n    dispatch(remove(id));\r\n  }\r\n);\r\nexport const changeStateTodo = createAsyncThunk(\r\n  \"todos/changeStateTodo\",\r\n\r\n  async ({ id, completed }, { dispatch }) => {\r\n    dispatch(changeState(id));\r\n\r\n    await updateDoc(doc(db, \"todos\", id), {\r\n      completed: !completed,\r\n    });\r\n  }\r\n);\r\n\r\nconst todosSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: {\r\n    todos: [],\r\n    status: null,\r\n  },\r\n  reducers: {\r\n    todos(state, action) {\r\n      state.todos.push(action.payload);\r\n    },\r\n    remove(state, action) {\r\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\r\n    },\r\n    changeState(state, action) {\r\n      const stateTodo = state.todos.find((todo) => todo.id === action.payload);\r\n\r\n      stateTodo.completed = !stateTodo.completed;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getTodos.pending]: (state) => {\r\n      state.status = \"pending\";\r\n    },\r\n    [getTodos.fulfilled]: (state, action) => {\r\n      state.status = \"resolved\";\r\n      state.todos = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { todos, remove, changeState } = todosSlice.actions;\r\nexport default todosSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport folderReducer from \"./slices/folderSlice\";\r\nimport todoReducer from \"./slices/todoSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    folders: folderReducer,\r\n    todos: todoReducer,\r\n  },\r\n});\r\n","import { useLocation } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./header.scss\";\r\n\r\nconst Header = () => {\r\n  const { pathname } = useLocation();\r\n  const folders = useSelector((state) => state.folders.folders).find(\r\n    (folder) => folder.id === pathname.slice(1)\r\n  );\r\n\r\n  const activeFolder =\r\n    pathname === \"/react-todo/\" ? \"Задачи\" : folders && folders.title;\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"header__title\">{activeFolder}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./checkbox.scss\";\r\n\r\nconst Checkbox = ({ completed, changeState, id }) => {\r\n  return (\r\n    <div\r\n      className={`checkbox ${completed ? \"checkbox--active\" : \"\"}`}\r\n      onClick={() => {\r\n        changeState(id, completed);\r\n      }}\r\n    >\r\n      <svg\r\n        width=\"20\"\r\n        height=\"15\"\r\n        viewBox=\"0 0 20 15\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M6.79289 14.7054L0.292881 8.16802C-0.097627 7.77527 -0.097627 7.13846 0.292881 6.74567L1.70706 5.32332C2.09757 4.93053 2.73077 4.93053 3.12128 5.32332L7.5 9.72717L16.8787 0.294565C17.2692 -0.0981884 17.9024 -0.0981884 18.2929 0.294565L19.7071 1.71692C20.0976 2.10967 20.0976 2.74648 19.7071 3.13927L8.20711 14.7054C7.81656 15.0982 7.1834 15.0982 6.79289 14.7054Z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import Checkbox from \"../../ui/checkbox\";\r\n\r\nimport \"../todos.scss\";\r\n\r\nconst Todo = ({ title, completed, id, removeTodo, changeState }) => {\r\n  return (\r\n    <div className=\"todo\">\r\n      <Checkbox completed={completed} changeState={changeState} id={id} />\r\n      <h2 className=\"todo__title\">{title}</h2>\r\n      <div className=\"todo__buttons\">\r\n        <button className=\"todo__button\">\r\n          <svg\r\n            width=\"25\"\r\n            height=\"25\"\r\n            viewBox=\"0 0 25 25\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M14.1964 4.55244L20.4473 10.8035L6.87389 24.3775L1.30079 24.9927C0.554715 25.0752 -0.0756396 24.4444 0.00736604 23.6983L0.627467 18.121L14.1964 4.55244ZM24.3134 3.62176L21.3784 0.686657C20.4629 -0.228886 18.9781 -0.228886 18.0626 0.686657L15.3014 3.44793L21.5522 9.69901L24.3134 6.93774C25.2289 6.02171 25.2289 4.53731 24.3134 3.62176Z\"\r\n              fill=\"#212832\"\r\n            />\r\n          </svg>\r\n        </button>\r\n        <button className=\"todo__button\" onClick={() => removeTodo(id)}>\r\n          <svg\r\n            width=\"25\"\r\n            height=\"30\"\r\n            viewBox=\"0 0 25 30\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M14.9554 24.375H16.2946C16.4722 24.375 16.6426 24.3009 16.7682 24.1691C16.8937 24.0372 16.9643 23.8584 16.9643 23.6719V11.0156C16.9643 10.8291 16.8937 10.6503 16.7682 10.5184C16.6426 10.3866 16.4722 10.3125 16.2946 10.3125H14.9554C14.7778 10.3125 14.6074 10.3866 14.4818 10.5184C14.3563 10.6503 14.2857 10.8291 14.2857 11.0156V23.6719C14.2857 23.8584 14.3563 24.0372 14.4818 24.1691C14.6074 24.3009 14.7778 24.375 14.9554 24.375ZM24.1071 4.6875H19.5084L17.611 1.36523C17.3729 0.948642 17.0361 0.603921 16.6334 0.364662C16.2307 0.125404 15.7758 -0.000231058 15.3131 3.19011e-07H9.68694C9.22441 -2.86388e-05 8.76975 0.125702 8.36724 0.364951C7.96473 0.6042 7.62808 0.948812 7.39007 1.36523L5.49163 4.6875H0.892857C0.656057 4.6875 0.428955 4.78627 0.261512 4.96209C0.0940686 5.1379 0 5.37636 0 5.625L0 6.5625C0 6.81114 0.0940686 7.0496 0.261512 7.22541C0.428955 7.40123 0.656057 7.5 0.892857 7.5H1.78571V27.1875C1.78571 27.9334 2.06792 28.6488 2.57025 29.1762C3.07258 29.7037 3.75388 30 4.46429 30H20.5357C21.2461 30 21.9274 29.7037 22.4298 29.1762C22.9321 28.6488 23.2143 27.9334 23.2143 27.1875V7.5H24.1071C24.3439 7.5 24.571 7.40123 24.7385 7.22541C24.9059 7.0496 25 6.81114 25 6.5625V5.625C25 5.37636 24.9059 5.1379 24.7385 4.96209C24.571 4.78627 24.3439 4.6875 24.1071 4.6875ZM9.58929 2.98301C9.61913 2.93085 9.66135 2.88773 9.71182 2.85784C9.76229 2.82795 9.81929 2.81233 9.87723 2.8125H15.1228C15.1806 2.81243 15.2375 2.8281 15.2879 2.85798C15.3382 2.88787 15.3804 2.93094 15.4102 2.98301L16.3845 4.6875H8.61551L9.58929 2.98301ZM20.5357 27.1875H4.46429V7.5H20.5357V27.1875ZM8.70536 24.375H10.0446C10.2222 24.375 10.3926 24.3009 10.5182 24.1691C10.6437 24.0372 10.7143 23.8584 10.7143 23.6719V11.0156C10.7143 10.8291 10.6437 10.6503 10.5182 10.5184C10.3926 10.3866 10.2222 10.3125 10.0446 10.3125H8.70536C8.52776 10.3125 8.35743 10.3866 8.23185 10.5184C8.10627 10.6503 8.03571 10.8291 8.03571 11.0156V23.6719C8.03571 23.8584 8.10627 24.0372 8.23185 24.1691C8.35743 24.3009 8.52776 24.375 8.70536 24.375Z\"\r\n              fill=\"#212832\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getTodos,\r\n  deleteTodo,\r\n  changeStateTodo,\r\n} from \"../../store/slices/todoSlice\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport Todo from \"./todo\";\r\n\r\nimport \"./todos.scss\";\r\n\r\nconst TodoList = () => {\r\n  const dispatch = useDispatch();\r\n  const { pathname } = useLocation();\r\n  const todos = useSelector((state) => state.todos.todos);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getTodos(pathname.slice(1)));\r\n  }, [dispatch, pathname]);\r\n\r\n  const removeTodo = (id) => {\r\n    dispatch(deleteTodo(id));\r\n  };\r\n\r\n  const changeState = (id, completed) => {\r\n    const params = {\r\n      id: id,\r\n      completed: completed,\r\n    };\r\n    dispatch(changeStateTodo(params));\r\n  };\r\n\r\n  return (\r\n    <div className=\"todos\">\r\n      {todos.map((todo) => (\r\n        <Todo\r\n          key={todo.id}\r\n          {...todo}\r\n          removeTodo={removeTodo}\r\n          changeState={changeState}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import classNames from \"classnames\";\r\n\r\nimport \"./input.scss\";\r\n\r\nconst Input = ({ name, className, value, setValue, onSubmit }) => {\r\n  return (\r\n    <form className={classNames(\"form\", className)} onSubmit={onSubmit}>\r\n      <input\r\n        className=\"form__field\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        placeholder=\" \"\r\n        type=\"text\"\r\n      />\r\n      <label className=\"form__label\">{name}</label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addNewTodo } from \"../../store/slices/todoSlice\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport Header from \"../header\";\r\nimport TodoList from \"../todoList\";\r\nimport Input from \"../ui/input\";\r\n\r\nimport \"./board.scss\";\r\n\r\nconst Board = () => {\r\n  const dispatch = useDispatch();\r\n  const { pathname } = useLocation();\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (value.trim(\"\").length > 0) {\r\n      const params = {\r\n        title: value.replace(/ +/g, \" \").trim(),\r\n        folderId: pathname.slice(1),\r\n      };\r\n\r\n      dispatch(addNewTodo(params));\r\n\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <Header />\r\n      <TodoList />\r\n      <Input\r\n        name=\"Введите название задач\"\r\n        value={value}\r\n        setValue={setValue}\r\n        onSubmit={addTodo}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","export default __webpack_public_path__ + \"static/media/logo.368d9126.svg\";","import logo from '../../../img/logo.svg'\r\n\r\nimport '../header.scss'\r\n\r\nconst HeaderLogo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <img src={logo} alt=\"\" />\r\n            <p>React todo</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderLogo\r\n","import \"../folders.scss\";\r\n\r\nconst Folder = ({ title, id, push, link, active, activeTodos }) => {\r\n  return (\r\n    <div\r\n      className={`folder ${active ? \"folder--active\" : \"\"}`}\r\n      onClick={() => {\r\n        push(link);\r\n        activeTodos(id);\r\n      }}\r\n    >\r\n      <h2 className=\"folder__title\">{title}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Folder;\r\n","import React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFolders } from \"../../store/slices/folderSlice\";\r\nimport { getTodos } from \"../../store/slices/todoSlice\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nimport Folder from \"./folder\";\r\n\r\nimport \"./folders.scss\";\r\n\r\nconst FolderList = () => {\r\n  const dispatch = useDispatch();\r\n  const folders = useSelector((state) => state.folders.folders);\r\n  const { push } = useHistory();\r\n  const { pathname } = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getFolders());\r\n  }, [dispatch]);\r\n\r\n  const activeTodos = (id) => {\r\n    dispatch(getTodos(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"folders\">\r\n      <Folder\r\n        title=\"Задачи\"\r\n        link=\"/react-todo/\"\r\n        push={push}\r\n        active={\r\n          pathname === \"/react-todo\" || pathname === \"/react-todo/\"\r\n            ? true\r\n            : false\r\n        }\r\n        activeTodos={activeTodos}\r\n      />\r\n      {folders.map((folder) => (\r\n        <Folder\r\n          key={folder.id}\r\n          {...folder}\r\n          link={`/${folder.id}`}\r\n          push={push}\r\n          active={pathname === `/${folder.id}` ? true : false}\r\n          activeTodos={activeTodos}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FolderList;\r\n","import React from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addNewFolder } from \"../../store/slices/folderSlice\";\r\n\r\nimport HeaderLogo from \"../header/headerLogo\";\r\nimport FolderList from \"../folderList\";\r\nimport Input from \"../ui/input\";\r\n\r\nimport \"./navigation.scss\";\r\n\r\nconst Navigation = () => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const addFolder = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (value.trim(\"\").length > 0) {\r\n      dispatch(addNewFolder(value.replace(/ +/g, \" \").trim()));\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <aside className=\"aside\">\r\n      <HeaderLogo />\r\n      <FolderList />\r\n      <Input\r\n        className=\"aside__field\"\r\n        name=\"Введите название папки\"\r\n        value={value}\r\n        setValue={setValue}\r\n        onSubmit={addFolder}\r\n      />\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import Board from \"../../components/board\";\r\nimport Navigation from \"../../components/navigation\";\r\n\r\nimport \"./home.scss\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main className=\"main\">\r\n      <Navigation />\r\n      <Board />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Route } from \"react-router\";\n\nimport Home from \"./pages/home\";\n\nfunction App() {\n  return (\n    <>\n      <Route exact path=\"/:folderId\" component={Home} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}